import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Input } from '@/components/ui/input';
import { ScrollArea } from '@/components/ui/scroll-area';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [selectedCheat, setSelectedCheat] = useState<string | null>(null);
  const [chatMessages, setChatMessages] = useState<Array<{text: string, isUser: boolean}>>([
    { text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', isUser: false }
  ]);
  const [messageInput, setMessageInput] = useState('');

  const sendMessage = () => {
    if (messageInput.trim()) {
      setChatMessages([...chatMessages, { text: messageInput, isUser: true }]);
      setMessageInput('');
      setTimeout(() => {
        setChatMessages(prev => [...prev, {
          text: '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ù–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ü–æ —Å—Ä–æ—á–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @Zirys',
          isUser: false
        }]);
      }, 1500);
    }
  };

  const cheats = [
    {
      id: 1,
      name: 'LebroDLC 1D',
      description: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –¥–µ–Ω—å',
      period: '1 –¥–µ–Ω—å',
      price: '100‚ÇΩ',
      features: ['ESP', 'Aim bot', 'Aimkill', 'Magic bullet', '–ù–µ—Ç –æ—Ç–¥–∞—á–∏', 'Fast reload', 'Kick', '–ë–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', 'Auto farm'],
      popular: false,
    },
    {
      id: 2,
      name: 'LebroDLC 7D',
      description: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 7 –¥–Ω–µ–π',
      period: '7 –¥–Ω–µ–π',
      price: '320‚ÇΩ',
      features: ['ESP', 'Aim bot', 'Aimkill', 'Magic bullet', '–ù–µ—Ç –æ—Ç–¥–∞—á–∏', 'Fast reload', 'Kick', '–ë–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', 'Auto farm'],
      popular: true,
      discount: '–í—ã–≥–æ–¥–Ω–æ',
    },
    {
      id: 3,
      name: 'LebroDLC 30D',
      description: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π',
      period: '30 –¥–Ω–µ–π',
      price: '800‚ÇΩ',
      features: ['ESP', 'Aim bot', 'Aimkill', 'Magic bullet', '–ù–µ—Ç –æ—Ç–¥–∞—á–∏', 'Fast reload', 'Kick', '–ë–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', 'Auto farm'],
      popular: true,
      discount: '–•–∏—Ç –ø—Ä–æ–¥–∞–∂',
    },
  ];

  const faqItems = [
    {
      question: '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞ —á–∏—Ç–∞?',
      answer: '–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤ Telegram.',
    },
    {
      question: '–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞–±–æ—Ç—ã?',
      answer: '–î–∞! –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —á–∏—Ç–æ–≤. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã ‚Äî –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.',
    },
    {
      question: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–∏—Ç—ã?',
      answer: '–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã –æ—Ç –∞–Ω—Ç–∏—á–∏—Ç–æ–≤, –Ω–æ 100% –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∏–∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å.',
    },
    {
      question: '–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?',
      answer: '–ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã –†–§, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, QIWI, –ÆMoney –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã.',
    },
    {
      question: '–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?',
      answer: '–û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –≤ Telegram: @Zirys. –û—Ç–≤–µ—á–∞–µ–º –±—ã—Å—Ç—Ä–æ!',
    },
  ];

  return (
    <div className="min-h-screen bg-background">
      <header className="border-b border-border sticky top-0 bg-background/95 backdrop-blur z-50">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center gap-2">
            <Icon name="Shield" className="text-primary" size={32} />
            <h1 className="text-2xl font-bold text-primary">LebroDLC</h1>
          </div>
          <Sheet>
            <SheetTrigger asChild>
              <Button className="gap-2">
                <Icon name="MessageCircle" size={18} />
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞
              </Button>
            </SheetTrigger>
            <SheetContent className="w-[400px] sm:w-[540px]">
              <SheetHeader>
                <SheetTitle className="flex items-center gap-2">
                  <Icon name="Headphones" className="text-primary" />
                  –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
                </SheetTitle>
                <SheetDescription>
                  –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º
                </SheetDescription>
              </SheetHeader>
              <div className="flex flex-col h-[calc(100vh-180px)] mt-4">
                <ScrollArea className="flex-1 pr-4 mb-4">
                  <div className="space-y-4">
                    {chatMessages.map((msg, idx) => (
                      <div
                        key={idx}
                        className={`flex ${msg.isUser ? 'justify-end' : 'justify-start'}`}
                      >
                        <div
                          className={`max-w-[85%] rounded-2xl px-4 py-3 ${
                            msg.isUser
                              ? 'bg-primary text-primary-foreground rounded-br-sm'
                              : 'bg-muted text-foreground rounded-bl-sm'
                          }`}
                        >
                          {msg.text}
                        </div>
                      </div>
                    ))}
                  </div>
                </ScrollArea>
                <div className="flex gap-2 border-t pt-4">
                  <Input
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                    value={messageInput}
                    onChange={(e) => setMessageInput(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
                    className="flex-1"
                  />
                  <Button onClick={sendMessage} size="icon">
                    <Icon name="Send" size={18} />
                  </Button>
                </div>
              </div>
            </SheetContent>
          </Sheet>
        </div>
      </header>

      <section className="relative overflow-hidden py-24 px-4">
        <div className="absolute inset-0 bg-gradient-to-br from-primary/20 via-transparent to-secondary/20 pointer-events-none" />
        <div className="container mx-auto text-center relative z-10 max-w-5xl">
          <Badge className="mb-4 bg-secondary text-secondary-foreground hover:bg-secondary/90 text-sm px-4 py-1">
            üî• –õ—É—á—à–∏–µ —á–∏—Ç—ã 2024
          </Badge>
          <h2 className="text-5xl md:text-7xl font-bold mb-6 tracking-tight leading-tight">
            –ü–†–ï–ú–ò–£–ú –ß–ò–¢–´
            <br />
            <span className="text-primary">LebroDLC</span>
          </h2>
          <p className="text-lg md:text-xl text-muted-foreground mb-8 max-w-2xl mx-auto leading-relaxed">
            –ù–∞–¥–µ–∂–Ω—ã–µ —á–∏—Ç—ã –¥–ª—è Oxide Survival Island. –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞. –ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.
          </p>
          <div className="flex gap-4 justify-center flex-wrap">
            <Button size="lg" className="gap-2 text-lg px-8">
              <Icon name="ShoppingCart" size={20} />
              –ö—É–ø–∏—Ç—å —á–∏—Ç
            </Button>
            <Button size="lg" variant="outline" className="gap-2 text-lg px-8">
              <Icon name="Shield" size={20} />
              –ì–∞—Ä–∞–Ω—Ç–∏–∏
            </Button>
          </div>
        </div>
      </section>

      <section className="py-16 px-4 bg-muted/30">
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <h3 className="text-4xl font-bold mb-4">–¢–∞—Ä–∏—Ñ—ã LebroDLC</h3>
            <p className="text-muted-foreground text-lg">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏</p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {cheats.map((cheat) => (
              <Card
                key={cheat.id}
                className={`p-8 hover:border-primary transition-all duration-300 cursor-pointer hover:scale-105 ${
                  selectedCheat === cheat.name ? 'border-primary shadow-xl shadow-primary/30 scale-105' : ''
                } ${cheat.popular ? 'border-primary/50' : ''}`}
                onClick={() => setSelectedCheat(cheat.name)}
              >
                {cheat.discount && (
                  <Badge className="mb-4 bg-secondary text-secondary-foreground">
                    {cheat.discount}
                  </Badge>
                )}
                <div className="text-center mb-6">
                  <h4 className="text-2xl font-bold mb-2">{cheat.name}</h4>
                  <p className="text-muted-foreground">{cheat.period}</p>
                </div>
                <div className="text-center mb-6">
                  <div className="text-5xl font-bold text-primary mb-2">{cheat.price}</div>
                </div>
                <div className="mb-6 space-y-3">
                  <p className="font-semibold text-sm uppercase tracking-wide text-muted-foreground mb-3">–§—É–Ω–∫—Ü–∏–∏:</p>
                  {cheat.features.map((feature, idx) => (
                    <div key={idx} className="flex items-start gap-3">
                      <Icon name="Check" size={18} className="text-primary flex-shrink-0 mt-0.5" />
                      <span className="text-sm">{feature}</span>
                    </div>
                  ))}
                </div>
                <Button className="w-full gap-2 h-12 text-base">
                  <Icon name="ShoppingBag" size={18} />
                  –ö—É–ø–∏—Ç—å
                </Button>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section className="py-16 px-4">
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <Icon name="ShieldCheck" size={56} className="text-primary mx-auto mb-4" />
            <h3 className="text-4xl font-bold mb-4">–ù–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏</h3>
            <p className="text-muted-foreground text-lg">–ú—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞</p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-10 max-w-5xl mx-auto">
            <div className="text-center">
              <div className="bg-primary/10 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6">
                <Icon name="CheckCircle" size={36} className="text-primary" />
              </div>
              <h4 className="text-xl font-semibold mb-3">100% –î–æ—Å—Ç–∞–≤–∫–∞</h4>
              <p className="text-muted-foreground leading-relaxed">
                –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —á–∏—Ç–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã ‚Äî –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏.
              </p>
            </div>

            <div className="text-center">
              <div className="bg-primary/10 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6">
                <Icon name="RotateCcw" size={36} className="text-primary" />
              </div>
              <h4 className="text-xl font-semibold mb-3">–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤</h4>
              <p className="text-muted-foreground leading-relaxed">
                –ï—Å–ª–∏ —á–∏—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ ‚Äî –≤–µ—Ä–Ω–µ–º –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
              </p>
            </div>

            <div className="text-center">
              <div className="bg-primary/10 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6">
                <Icon name="Headphones" size={36} className="text-primary" />
              </div>
              <h4 className="text-xl font-semibold mb-3">24/7 –ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
              <p className="text-muted-foreground leading-relaxed">
                –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏. –ü–æ–º–æ–∂–µ–º —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.
              </p>
            </div>
          </div>
        </div>
      </section>

      <section className="py-16 px-4 bg-muted/30">
        <div className="container mx-auto max-w-4xl">
          <div className="text-center mb-12">
            <Icon name="HelpCircle" size={56} className="text-primary mx-auto mb-4" />
            <h3 className="text-4xl font-bold mb-4">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
            <p className="text-muted-foreground text-lg">–û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</p>
          </div>

          <Accordion type="single" collapsible className="w-full space-y-4">
            {faqItems.map((item, idx) => (
              <AccordionItem key={idx} value={`item-${idx}`} className="bg-background border rounded-lg px-6">
                <AccordionTrigger className="text-left text-lg font-semibold hover:no-underline py-6">
                  {item.question}
                </AccordionTrigger>
                <AccordionContent className="text-muted-foreground pb-6 leading-relaxed">
                  {item.answer}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </div>
      </section>

      <footer className="border-t border-border py-12 px-4">
        <div className="container mx-auto text-center">
          <div className="flex items-center justify-center gap-2 mb-6">
            <Icon name="Shield" className="text-primary" size={36} />
            <h2 className="text-3xl font-bold text-primary">LebroDLC</h2>
          </div>
          <p className="text-muted-foreground mb-8 text-lg">–ü—Ä–µ–º–∏—É–º —á–∏—Ç—ã –¥–ª—è Oxide Survival Island</p>
          <div className="flex gap-4 justify-center mb-8">
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="outline" className="gap-2">
                  <Icon name="MessageCircle" size={18} />
                  –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
                </Button>
              </SheetTrigger>
              <SheetContent className="w-[400px] sm:w-[540px]">
                <SheetHeader>
                  <SheetTitle className="flex items-center gap-2">
                    <Icon name="Headphones" className="text-primary" />
                    –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
                  </SheetTitle>
                  <SheetDescription>
                    –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º
                  </SheetDescription>
                </SheetHeader>
                <div className="flex flex-col h-[calc(100vh-180px)] mt-4">
                  <ScrollArea className="flex-1 pr-4 mb-4">
                    <div className="space-y-4">
                      {chatMessages.map((msg, idx) => (
                        <div
                          key={idx}
                          className={`flex ${msg.isUser ? 'justify-end' : 'justify-start'}`}
                        >
                          <div
                            className={`max-w-[85%] rounded-2xl px-4 py-3 ${
                              msg.isUser
                                ? 'bg-primary text-primary-foreground rounded-br-sm'
                                : 'bg-muted text-foreground rounded-bl-sm'
                            }`}
                          >
                            {msg.text}
                          </div>
                        </div>
                      ))}
                    </div>
                  </ScrollArea>
                  <div className="flex gap-2 border-t pt-4">
                    <Input
                      placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                      value={messageInput}
                      onChange={(e) => setMessageInput(e.target.value)}
                      onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
                      className="flex-1"
                    />
                    <Button onClick={sendMessage} size="icon">
                      <Icon name="Send" size={18} />
                    </Button>
                  </div>
                </div>
              </SheetContent>
            </Sheet>
            <a href="https://t.me/Zirys" target="_blank" rel="noopener noreferrer">
              <Button variant="outline" className="gap-2">
                <Icon name="Send" size={18} />
                Telegram
              </Button>
            </a>
          </div>
          <div className="text-sm text-muted-foreground space-y-2">
            <p>–°–æ–∑–¥–∞—Ç–µ–ª—å —Å–∞–π—Ç–∞: <a href="https://t.me/Zirys" target="_blank" rel="noopener noreferrer" className="text-primary hover:underline font-medium">@Zirys</a></p>
            <p>¬© 2024 LebroDLC. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
